#!/bin/bash

if [ -z "${GITHUB_ACCESS_TOKEN}" ]; then
	fail "Cannot deploy to Github becuase GITHUB_ACCESS_TOKEN environment variable is missing."
fi

function extractReleaseId {
	checkForExecutable js
	echo "var data=${*}; print(data.id);" | js
}
function deploy-github-removeAlreadyExistingRelease {
	checkForExecutable curl
	checkForExecutable git

	local releaseInfo=$(curl --fail -s -S -X GET https://api.github.com/repos/echocat/docker-nano/releases/tags/v${VERSION} \
		-H "Accept: application/vnd.github.v3+json" \
		-H "Authorization: token $GITHUB_ACCESS_TOKEN" \
		2> /dev/null
	)
	if [ $? -eq 0 ]; then
		log INFO "Remove already existing release..."
		local releaseId=$(extractReleaseId ${releaseInfo})
		execute curl --fail -s -S -X DELETE https://api.github.com/repos/echocat/docker-nano/releases/${releaseId} \
			-H "Accept: application/vnd.github.v3+json" \
			-H "Authorization: token $GITHUB_ACCESS_TOKEN"

		execute git push origin ":refs/tags/v${VERSION}" > /dev/null
		sleep 2
		log INFO "Remove already existing release... DONE!"
	fi
}

function deploy-github-artifacts {
	deploy-github-removeAlreadyExistingRelease

	checkForExecutable curl
	log INFO "Create release..."
	local releaseInfo=$(curl --fail -sS -X POST https://api.github.com/repos/echocat/docker-nano/releases \
		-H "Accept: application/vnd.github.v3+json" \
		-H "Authorization: token $GITHUB_ACCESS_TOKEN" \
		-H "Content-Type: application/json" \
		-d "{
			\"tag_name\": \"v${VERSION}\",
			\"name\": \"v${VERSION}\",
			\"target_commitish\": \"v${VERSION}\"
		}" \
	)
	if [ $? -ne 0 ]; then
		fail "Could not create release."
	fi
	log INFO "Create release... DONE!"
	local releaseId=$(extractReleaseId ${releaseInfo})

	log INFO "Upload toolchain.tar.gz to release assets..."
	execute curl --fail -sS -X POST https://uploads.github.com/repos/echocat/docker-nano/releases/${releaseId}/assets?name=toolchain.tar.gz \
		-H "Accept: application/vnd.github.v3+json" \
		-H "Authorization: token $GITHUB_ACCESS_TOKEN" \
		-H "Content-Type: application/octet-stream" \
		--data-binary @"${IMAGES_DIRECTORY}/toolchain.tar.gz" \
		> /dev/null;
	log INFO "Upload toolchain.tar.gz to release assets... DONE!"

	log INFO "Upload rootfs.tar.gz to release assets..."
	execute curl --fail -sS -X POST https://uploads.github.com/repos/echocat/docker-nano/releases/${releaseId}/assets?name=rootfs.tar.gz \
		-H "Accept: application/vnd.github.v3+json" \
		-H "Authorization: token $GITHUB_ACCESS_TOKEN" \
		-H "Content-Type: application/octet-stream" \
		--data-binary @"${IMAGES_DIRECTORY}/rootfs.tar.gz" \
		> /dev/null;
	log INFO "Upload rootfs.tar.gz to release assets... DONE!"
}
